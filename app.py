import streamlit as st
import pandas as pd

# --- Conjunto de Datos de B√∫squedas y Temas de Inter√©s ---
# Este es nuestro "historial" de b√∫squedas y los temas de inter√©s asociados.
# En un sistema real, esto provendr√≠a de una base de datos o un data lake.
data = {
    "busqueda": [
        "zapatillas deportivas", "ropa de ejercicio", "suplementos fitness",
        "recetas saludables", "entrenamiento en casa", "yoga principiantes",
        "smartwatch deportivo", "auriculares inalambricos gym",
        "camisetas running", "mancuernas ajustables",
        "peliculas de ciencia ficcion", "series de fantasia", "libros de misterio",
        "videojuegos de rol", "consolas de nueva generacion",
        "coches electricos", "motos deportivas", "bicicletas de monta√±a",
        "viajes a la playa", "hoteles baratos",
        "herramientas de jardin", "plantas de interior", "macetas decorativas"
    ],
    "tema_interes": [
        "fitness", "fitness", "fitness",
        "salud y bienestar", "fitness", "salud y bienestar",
        "tecnologia", "tecnologia",
        "fitness", "fitness",
        "entretenimiento", "entretenimiento", "entretenimiento",
        "entretenimiento", "tecnologia",
        "automovilismo", "automovilismo", "deportes al aire libre",
        "viajes", "viajes",
        "hogar y jardin", "hogar y jardin", "hogar y jardin"
    ],
    "anuncio_sugerido": [
        "Oferta de zapatillas Nike", "Descuento en ropa Adidas", "Promo en prote√≠nas",
        "Curso de cocina saludable online", "App de entrenamiento personalizado", "Clases de yoga en l√≠nea",
        "Nuevo Apple Watch", "Aud√≠fonos Bluetooth JBL",
        "Ropa deportiva Under Armour", "Mancuernas ajustables PowerBlock",
        "Estrenos en Netflix", "Sagas literarias √©picas", "Novelas de suspense",
        "Juegos para PlayStation 5", "Ofertas en consolas Xbox",
        "Test drive de Tesla", "Motos Ducati a tu medida", "Bicicletas de monta√±a Trek",
        "Paquetes tur√≠sticos a Canc√∫n", "Hoteles con descuento en Punta Cana",
        "Herramientas de jardiner√≠a profesionales", "Plantas ex√≥ticas para tu hogar", "Macetas de dise√±o"
    ]
}

df_busquedas = pd.DataFrame(data)

# --- Funci√≥n para Sugerir Anuncios ---
def sugerir_anuncios(busqueda_usuario):
    # Convertir la b√∫squeda del usuario a min√∫sculas para una comparaci√≥n insensible a may√∫sculas
    busqueda_usuario_lower = busqueda_usuario.lower()

    # Buscar temas de inter√©s relacionados con la b√∫squeda del usuario
    temas_relacionados = df_busquedas[df_busquedas["busqueda"].str.contains(busqueda_usuario_lower, case=False)]["tema_interes"].unique()

    sugerencias = []
    if len(temas_relacionados) > 0:
        # Si encontramos temas relacionados, sugerimos anuncios basados en esos temas
        for tema in temas_relacionados:
            anuncios_posibles = df_busquedas[df_busquedas["tema_interes"] == tema]["anuncio_sugerido"].tolist()
            sugerencias.extend(anuncios_posibles)
    else:
        # Si no hay coincidencias directas, se podr√≠a implementar una l√≥gica m√°s compleja
        # (por ejemplo, buscar palabras clave, usar modelos de embeddings, etc.)
        # Para este ejemplo simple, si no hay coincidencia directa, sugerimos anuncios generales
        sugerencias = ["Anuncios generales: ¬°Descubre ofertas en productos variados!", "Prueba nuestros servicios premium", "Explora nuevas categor√≠as"]

    # Eliminar duplicados y devolver una muestra limitada
    return list(set(sugerencias))[:5] # Limitar a 5 sugerencias para no abrumar

# --- Interfaz de Usuario con Streamlit ---
st.set_page_config(page_title="Emulaci√≥n de Anuncios Sugeridos", layout="centered")

st.title("üîé Emulaci√≥n de Sugerencia de Anuncios Basada en B√∫squedas")
st.markdown("""
Este ejemplo simula c√≥mo las b√∫squedas de un usuario en una plataforma
podr√≠an influir en los anuncios que se le muestran.
Introduce algunas palabras clave en el buscador y mira qu√© anuncios se sugieren.
""")

st.subheader("Simulador de B√∫squeda")
user_input = st.text_input("¬øQu√© est√°s buscando hoy?", placeholder="Ej: zapatillas deportivas, peliculas de ciencia ficcion, viajes")

if user_input:
    st.subheader("Anuncios Sugeridos para ti:")
    sugerencias_anuncios = sugerir_anuncios(user_input)

    if sugerencias_anuncios:
        for anuncio in sugerencias_anuncios:
            st.info(f"üëâ {anuncio}")
    else:
        st.write("No hay sugerencias de anuncios en este momento para tu b√∫squeda espec√≠fica. ¬°Intenta con otras palabras clave!")

st.markdown("---")
st.subheader("C√≥mo funciona (Detr√°s de Escena):")
st.markdown("""
1.  **Conjunto de Datos:** Tenemos un conjunto de datos simple que asocia palabras clave de b√∫squeda con "temas de inter√©s" (por ejemplo, 'fitness', 'entretenimiento', 'viajes').
2.  **Mapeo:** Cuando ingresas una b√∫squeda, el sistema intenta mapear tus palabras clave a uno o m√°s de estos temas de inter√©s.
3.  **Sugerencia:** Una vez que se identifica un tema de inter√©s, se muestran anuncios que est√°n pre-asociados con ese tema en nuestro conjunto de datos.
""")

st.subheader("Datos de Ejemplo Utilizados:")
st.dataframe(df_busquedas)

st.caption("Nota: Este es un ejemplo simplificado. Un sistema de sugerencia de anuncios real ser√≠a mucho m√°s complejo, utilizando algoritmos de machine learning, an√°lisis de comportamiento del usuario, historial de clics, datos demogr√°ficos, etc.")
